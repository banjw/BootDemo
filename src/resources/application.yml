 server:
  port: 8081
 logging:
   level:
     org.springframework.web: DEBUG
# spring:
     #数据连接池Druid配置
#     datasource:
#         #name配置这个属性的意义在于，如果存在多个数据源，监控的时候
#         #可以通过名字来区分开来。如果没有配置，将会生成一个名字，
#         #格式是："DataSource-" + System.identityHashCode(this)
#         name: test
#         url: jdbc:mysql://localhost:3306/bill_manager?useUnicode=true&characterEncoding=utf-8&useSSL=false
#         username: root
#         password: 123456
#         # 使用druid数据源com.alibaba.druid.pool.DruidDataSource
#         type: com.alibaba.druid.pool.DruidDataSource
#         driver-class-name: com.mysql.jdbc.Driver
#         #属性类型是字符串，通过别名的方式配置扩展插件，
#         #常用的插件有：
#         #监控统计用的filter:stat
#         #日志用的filter:log4j
#         #防御sql注入的filter:wall
#         filters: stat,wall,log4j
#         connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#         #最大连接池数量
#         maxActive: 20
#         #初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
#         initialSize: 1
#         #获取连接时最大等待时间，单位毫秒。配置了maxWait之后，
#         #缺省启用公平锁，并发效率会有所下降，
#         #如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
#         maxWait: 60000
#         #最小连接池数量
#         minIdle: 1
#         #有两个含义： 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#         #1) Destroy线程会检测连接的间隔时间
#         #2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
#         timeBetweenEvictionRunsMillis: 60000
#         #配置一个连接在池中最小生存的时间，单位是毫秒
#         minEvictableIdleTimeMillis: 300000
#         validationQuery: select 'x'
#         testWhileIdle: true
#         testOnBorrow: false
#         testOnReturn: false
#         poolPreparedStatements: true
#         maxOpenPreparedStatements: 20

     #thymeleaf模板引擎设置
#     thymeleaf:
#         #前缀
#         prefix: classpath:/templates/
#         #后缀
#         suffix: .html
#         #spring.thymeleaf.mode = LEGACYHTML5spring.thymeleaf.mode的默认值是HTML5，其实是一个很严格的检查，改为LEGACYHTML5可以得到一个可能更友好亲切的格式要求。
#         #需要注意的是，LEGACYHTML5需要搭配一个额外的库NekoHTML才可用。到项目根目录的build.gradle文件里这样添加它到dependencies：
#         #compile('net.sourceforge.nekohtml:nekohtml:1.9.22')然后运行一次Gradle刷新（有任何Gradle改动，都应该这样运行一次）：
#         #Gradle刷新
#         #最后重启项目就可以感受到不那么严格的thymeleaf了。
#         mode: LEGACYHTML5
#         #编码
#         encoding: UTF-8
#         #包含类型
#         content-type: text/html
#         #开发时关闭缓存,不然没法看到实时页面
#         cache: false




 #mybatis配置
# mybatis:
#   #如果有mybatis的配置文件,如下配置就可以加载
#   #config-location: classpath:mybatis-config.xml
#   #在Mapper.xml中使用别名
#   type-aliases-package: mybatis.demo.pojo
 #  mapper-locations:
 #  #数组
 #  - mybatis.demo.dao/*.xml